<snippet>
	<content><![CDATA[
int parent[N][level];
int depth[N];
void dfs(int u,int p)
{
    for(auto it:adj[u])
    {
        if(it == p)
            continue;
        depth[it] = depth[u]+1;
        parent[it][0] = u;
        dfs(it,u);
    }
}
void precomputeSparseMatrix(int n) 
{ 
    for (int i=1; i<level; i++) 
        for (int node = 1; node <= n; node++) 
            if (parent[node][i-1] != -1)
                parent[node][i] = parent[parent[node][i-1]][i-1];
}
int walk(int u,int diff){
    for (int i=0; i<level; i++) 
        if ((diff>>i)&1) 
            u = parent[u][i]; 
    return u;
}
int lca(int u,int v)
{ 
    int diff = abs(depth[u] - depth[v]);
    if(depth[u] < depth[v])
        swap(u,v);
    for (int i=0; i<level; i++) 
        if ((diff>>i)&1)
            u = parent[u][i];
            
    if (u == v)
        return u;
    
    for (int i = level-1; i >= 0; i--)  
        if(parent[u][i] != parent[v][i])  {  
            u = parent[u][i];
            v = parent[v][i];
            
        }  
    return  parent[u][0];
}
 
void initialize()
{
    for(int i = 1;i <=n; ++i){
        depth[i] = 0;
        for(int j = 0;j < level;++j)
            parent[i][j] = -1;
    }
}
int dist(int a,int b){
    int lcA = lca(a,b);
    return depth[a] + depth[b] - 2*depth[lcA];
}

]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>lca</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
