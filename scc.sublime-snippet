<snippet>
	<content><![CDATA[
class SCC{
private:
    int n,numScc;
    vector<vector<int>>adj,rev_adj;
    // total value of each component
    vector<int>vis,comp,comp_val,node_val;
    stack<int>st;
public:
    SCC(int _n){
        numScc = 0;
        n = _n;
        adj.resize(n);
        comp.resize(n);
        rev_adj.resize(n);
        vis.assign(n,0);
        node_val.assign(n,0);
        comp_val.assign(n,0);
    }
    void assign_node_value(int node,int val){
        node_val[node - 1] = val;
    }
    void add_edge(int u,int v){
        --u,--v;
        adj[u].push_back(v);
        rev_adj[v].push_back(u);
    }
    void dfs1(int u){
        vis[u] = 1;
        for(auto it : adj[u])
            if(vis[it] == 0)
                dfs1(it);
        st.push(u);
    }

    void dfs2(int u){
        vis[u] = 1;
        comp[u] = numScc;
        comp_val[numScc] += node_val[u];
        for(auto it : rev_adj[u]){
            if(vis[it] == 0)
                dfs2(it);
        }
    }
    void build()
    {
        for(int i = 0; i < n; ++i){
            if(vis[i] == 0)
                dfs1(i);
        }
        for(int i = 0; i < n; ++i)
            vis[i] = 0;

        while(!st.empty()){
            int u = st.top();
            st.pop();
            if(vis[u])
                continue;
            dfs2(u);
            ++numScc;
        }
    }
    int get_count(){
        return numScc;
    }

};

]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>SCC</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
