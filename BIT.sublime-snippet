<snippet>
	<content><![CDATA[

int bit[N];

void update(int idx, int val)
{
  while(idx <= N)
  {
    bit[idx] += val;
    idx += idx & -idx;
  }
}

void updateMax(int idx, int val)
{
  while(idx <= N)
  {
    bit[idx] = max(bit[idx], val);
    idx += idx & -idx;
  }
}

int pref(int idx)
{
  int ans = 0;
  while(idx > 0)
  {
    ans += bit[idx];
    idx -= idx & -idx;
  }
  return ans;
}

int rsum(int l, int r)
{
  return pref(r) - pref(l - 1);
}

int prefMax(int idx)
{
  int ans = -2e9;
  while(idx > 0)
  {
    ans = max(ans, bit[idx]);
    idx -= idx & -idx;
  }
  return ans;
}


bool test=0;
void solve()
{
  
  int n,q,x,ind,l,r;
  cin>>n>>q;
  int arr[n];
  // bit index = array index + 1.
  for(int i = 1; i <= n; i++)
  {
    cin >> arr[i-1];
    update(i,arr[i-1]);
  }
 /* for(int i = 1; i <= n; i++)
    cout<<bit[i]<<" ";*/
  for(int i=0;i<q;i++)
  {
     int t1;
     cin>>t1;
     if(t1==1)  // for  update
     {
        cin>>ind>>x;
        update(ind,x);
     }
     else
     {
      cin>>l>>r;
      cout<<rsum(l,r)<<"\n";
     }
  }


}

]]></content>
	<tabTrigger>BIT</tabTrigger>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<!--  -->
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
