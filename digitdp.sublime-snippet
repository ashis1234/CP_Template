<snippet>
	<content><![CDATA[
  /*
    Auther: ghoshashis545 Ashis Ghosh ðŸ˜Ž
    College: Jalpaiguri Govt Enggineering College
*/
#pragma GCC optimize("Ofast")  
#pragma GCC target("avx,avx2,fma") 

#include <bits/stdc++.h>
#include<algorithm>
#include<string>
using namespace std;
// #include <ext/pb_ds/assoc_container.hpp>
// #include <ext/pb_ds/tree_policy.hpp>
// using namespace __gnu_pbds;
// template <class type1>
// using ordered_multiset = tree <type1, null_type, less_equal <type1>, rb_tree_tag, tree_order_statistics_node_update>;
// typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set; 

#define ll int
#define int long long
#define ld long double
#define ff first
#define ss string 
#define se second
#define sp(x) cout << fixed << setprecision(x)
#define endl "\n"
#define ub upper_bound
#define lb lower_bound
#define vi vector<int>
#define ipair pair<int,int>
#define vpi vector<ipair>
#define clr(a,x) memset(a,x,sizeof(a))
#define alt(v) v.begin(),v.end()
#define ralt(v) v.rbegin(),v.rend()
#define pb emplace_back
#define mp make_pair
#define cntb(x) __builtin_popcount(x)
#define fab(i,a,b) for(int i=(a);i<(b);i++)
#define fba(i,a,b) for(int i=(b);i>=(a);i--)
bool ispoweroftwo(int n){return n&(!(n&(n-1)));}
int mod=1000000007;
// int mod=998244353;
int dx[] = {1,0,-1,0};
int dy[] = {0,-1,0,1};

bool test  = 1;

const int inf = 1e9;
const int N = 2e5+5;

int cache[51][18][18][18][2];
int n;
int digitdp(string &s,int idx = 0,int c1 = 0,int c2 = 0,int c3 = 0,int tight = 1)
{
    if(c1 > 17 or c2 > 17 or c3 > 17)
        return 0;
    if(idx == n)
        return c1==c2 and c2==c3 and c1 > 0;
    int &ans = cache[idx][c1][c2][c3][tight];
    if(ans != -1)
        return ans;
    ans = 0;
    int f = 9;
    if(tight)
        f = (s[idx]-'0');
    for(int i = 0; i <= f; ++i){
        ans += digitdp(s,idx+1,c1+(i==3),c2+(i==6),c3+(i==9),tight&(i==f));
        ans %= mod;
    }
    return ans;
}

string to_string1(int x)
{
    string s="";
    while(x){
        int r = x%10;
        char ch = ('0'+r);
        s += ch;
        x/=10;
    }
    reverse(alt(s));
    return s;
}


int l,r;
void solve(int tc = 0)
{
   cin >> l >> r;
   clr(cache,-1);
   string s = to_string1(r);
   n = (int)s.size();
   // cout<<s<<" ";
   int ans = digitdp(s);
   l-=1;

   s = to_string1(l);
   // cout<<s<<" ";
   n = (int)s.size();
   clr(cache,-1);
   ans -= digitdp(s);
   ans += mod;
   ans %= mod;
   cout<<ans<<"\n";
}

 

 
 
 
 
 
 
 
 
 
 
 
 
 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
signed main()
{
    ios_base::sync_with_stdio(false);cin.tie(NULL);
    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    #endif
    int t=1;
    if(test)
    cin>>t;
    for(int i = 1; i <= t; ++i){
        solve(i);
    }
    return 0;
} 
 
 
 
 
 
 
 

 
 
 
 
 
 
 
 
 
 
 
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>digitdp</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
